#!/usr/bin/env python3
import sys
import os
from collections import OrderedDict

import numpy as np
from astropy.io import fits as pyfits
from matplotlib import colors
from matplotlib import pyplot as plt
from matplotlib.patches import Ellipse


def load_params(cc_dir):
    param_file = os.path.join(cc_dir, "shift_parameters", "parameters.dat")
    param_boot = os.path.join(cc_dir, "shift_parameters", "parameters.boot")
    values = []
    with open(param_file) as f:
        for line in f.readlines():
            if len(line.strip()) > 0 and not line.startswith("#"):
                values.append(float(line.split()[1]))
    values = np.array(values)
    errors = np.loadtxt(param_boot).std(axis=0)
    return values[:-2], errors[:-2]


zbins = OrderedDict([
    ("0.101z0.301", r"$0.1 < z_{\rm phot} \leq 0.3$"),
    ("0.301z0.501", r"$0.3 < z_{\rm phot} \leq 0.5$"),
    ("0.501z0.701", r"$0.5 < z_{\rm phot} \leq 0.7$"),
    ("0.701z0.901", r"$0.7 < z_{\rm phot} \leq 0.9$"),
    ("0.901z1.201", r"$0.9 < z_{\rm phot} \leq 1.2$")])

param_list = []
error_list = []
labels = []
for path in sys.argv[1:]:
    params, errors = load_params(path)
    param_list.append(params[::2])
    error_list.append(errors[::2])

fig, ax = plt.subplots(1, 1, sharex=True)
offsets = np.linspace(-0.4, 0.4, len(param_list) + 2)[1:-1]
handles = []
for params, errors, offset in zip(param_list, error_list, offsets):
    handles.append(ax.errorbar(
        params, [y + offset for y in range(len(zbins), 0, -1)],
        xerr=errors, marker=".", ls="none"))
ax.set_yticks(range(1, len(zbins) + 1))
ax.set_yticklabels(reversed(zbins.values()))
ax.set_xlabel(r"$\Delta z$")

fig.legend(
    handles, sys.argv[1:], loc="upper center", frameon=False,
    prop={"size": 7})

for y in range(1, len(zbins)):
    ax.axhline(y + 0.5, color="k", lw=0.7)
ax.axvline(
    x=0, color="k", alpha=0.33, lw=0.7, zorder=-1)
ax.yaxis.grid(False)
ax.yaxis.set_tick_params(length=0)

plt.show()
